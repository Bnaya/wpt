interface ReadOnly {
  readonly setlike<DOMString>;
};

interface ReadWrite {
  setlike<DOMString>;
};

interface DeleteA {
  setlike<DOMString>;
  void delete();
};

interface DeleteB {
  readonly setlike<DOMString>;
  void delete();
};

interface DeleteC {
  readonly setlike<DOMString>;
  readonly attribute long delete;
};

interface DeleteD {
  readonly setlike<DOMString>;
  const long delete = 0;
};

interface DeleteE : ReadOnly {
  void delete();
};

interface DeleteF : ReadOnly {
  readonly attribute long delete;
};

interface DeleteG : ReadOnly {
  const long delete = 0;
};

interface DeleteH : ReadWrite {
  void delete();
};

interface DeleteI : ReadWrite {
  readonly attribute long delete;
};

interface DeleteJ : ReadWrite {
  const long delete = 0;
};

interface DeleteK {
  readonly setlike<DOMString>;
  static void delete();
};

interface DeleteL {
  readonly setlike<DOMString>;
  static readonly attribute long delete;
};

interface DeleteM1 {
  static void delete();
};

interface DeleteM2 : DeleteM1 {
  readonly setlike<DOMString>;
};

interface DeleteN1 {
  static readonly attribute long delete;
};

interface DeleteN2 : DeleteN1 {
  readonly setlike<DOMString>;
};
